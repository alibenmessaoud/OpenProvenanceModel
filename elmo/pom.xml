<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>specs</artifactId>
    <groupId>org.openprovenance</groupId>
    <version>1.1.8-SNAPSHOT</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.openprovenance</groupId>
  <artifactId>opm-elmo</artifactId>
  <name>Elmo-based Open Provenance Model RDF</name>
  <version>1.1.8-SNAPSHOT</version>
  <packaging>jar</packaging>
  <description>Java Objects representing the OPM model and an RDF serialiser/deserialiser for them. Classes are  generated by elmo plugin from the OWL ontology.</description>


  <repositories>
    <repository>
		<id>aduna-opensource.releases</id>
		<name>Aduna Open Source - Mavenr eleases</name>
		<url>http://repo.aduna-software.org/maven2/releases</url>
	</repository>
  </repositories>


  <dependencies>
    <dependency>
      <groupId>org.openrdf.elmo</groupId>
      <artifactId>elmo-sesame</artifactId>
      <version>1.5</version>
    </dependency>

    <dependency>
      <groupId>org.openrdf.elmo</groupId>
      <artifactId>elmo-codegen</artifactId>
      <version>1.5</version>
    </dependency>

    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-runtime</artifactId>
      <version>2.3.0</version>
    </dependency>

    <dependency>
		<groupId>org.openrdf.sesame</groupId>
		<artifactId>sesame-rio-n3</artifactId>
		<version>2.3.0</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.5.2</version>  <!-- note old version required for elmo! -->
    </dependency>


    <dependency>
      <groupId>org.openprovenance</groupId>
      <artifactId>opm-core</artifactId>
      <version>1.1.8-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>org.jvnet.jaxb2_commons</groupId>
	  <artifactId>runtime</artifactId>
   	  <version>${jaxb.common.version}</version>
    </dependency>

      <dependency>
        <groupId>xerces</groupId>
        <artifactId>xercesImpl</artifactId>
        <version>${xerces.version}</version>
      </dependency>


    <dependency>
      <groupId>org.openprovenance</groupId>
      <artifactId>opm-core</artifactId>
      <version>1.1.8-SNAPSHOT</version>
      <!-- <classifier>tests</classifier> -->
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>


 </dependencies>

  <build>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>



     <plugins>




<!--
A tool for converting ontologies to Elmo concepts and concepts back to
ontologies.

usage: java -jar elmo-codegen.jar [options] [ontology | jar]...
[ontology | jar]... are a list of RDF and jar files that should be
imported before converting.
 -b,-bind <package=namespace>          Binds a package name and namespace together
 -e,-extends <full class name>   super class that all concepts should extend
 -h,-help                        print this message
 -j,-jar <jar file>              filename where the jar will be saved
 -p,-prefix <prefix>             prefix the property names with namespace prefix
 -r,-rdf <RDF file>              filename where the rdf ontology will be saved
-->


      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>patch.source.files</id>
            <phase>generate-sources</phase>
            <goals>
             <goal>run</goal>
            </goals>
            <configuration>
              <tasks>





                <mkdir dir="${project.build.directory}" />
                <mkdir dir="${project.build.directory}/generated-sources" />
                <mkdir dir="${project.build.directory}/generated-sources/elmo" />
                
                <java classname="org.openrdf.elmo.codegen.OntologyConverter" fork="true">
                  <classpath refid="maven.compile.classpath" />
                  <classpath>
                    <pathelement path="." />   <!-- add this path element to pick up log4.properties in the classpath -->
                  </classpath>
                  <arg value="-b" />
                  <arg value="org.openprovenance.rdf=http://openprovenance.org/opmo#" />
                  <arg value="-b" />
                  <arg value="org.openprovenance.rdf=http://purl.org/net/opmv/ns#" />
                  <arg value="-b" />
                  <arg value="org.openprovenance.dc=http://purl.org/dc/elements/1.1/" />
                  <arg value="-j" />
                  <arg value="target/opmconcepts.jar" />
                  <arg value="-p" />
                  <arg value="" />

                  <arg value="src/main/resources/opmo.owl" />
                </java>
                
                
                <unzip src="${project.build.directory}/opmconcepts.jar" dest="${project.build.directory}/generated-sources/elmo">
                  <patternset>
                    <exclude name="**/*.class" />
                  </patternset>
                </unzip>
                
                
              </tasks>
              <sourceRoot>${project.build.directory}/generated-sources/elmo/</sourceRoot>
            </configuration>
          </execution>
          
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.3</version>
      </plugin>



    </plugins>

   
    <testResources>
       <testResource>
         <directory>src/test/resources</directory>
         <filtering>true</filtering>
       </testResource>
    </testResources>
  </build>



</project>
